!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("@angular/common"),require("@angular/common/http"),require("@angular/core"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@romainmarecat/ngx-slack-notification",["exports","rxjs","@angular/common","@angular/common/http","@angular/core","@angular/forms"],e):e((t.romainmarecat=t.romainmarecat||{},t.romainmarecat["ngx-slack-notification"]={}),t.rxjs,t.ng.common,t.ng.common.http,t.ng.core,t.ng.forms)}(this,function(t,e,o,n,r,i){"use strict";var a=(c.prototype.notify=function(){},c.prototype.sendNotification=function(){return e.of("ok")},c);function c(){}var s=(u.prototype.sendNotification=function(t){var e=(new n.HttpHeaders).set("Content-Type","application/x-www-form-urlencoded; charset=UTF-8");return this.http.post(this.slackUrl,t,{headers:e,responseType:"text"})},u.prototype.notify=function(t){var e="payload="+JSON.stringify(t);this.sendNotification(e).subscribe()},u.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],u.ctorParameters=function(){return[{type:n.HttpClient},{type:String,decorators:[{type:r.Inject,args:["slackUrl"]}]}]},u.ngInjectableDef=r.defineInjectable({factory:function(){return new u(r.inject(n.HttpClient),r.inject("slackUrl"))},token:u,providedIn:"root"}),u);function u(t,e){this.http=t,this.slackUrl=e}var p=new r.InjectionToken("slackUrl");function l(t,e){return new s(t,e)}var f=(d.forRoot=function(t){return{ngModule:d,providers:[{provide:s,useFactory:l,deps:[n.HttpClient,p]},{provide:p,useValue:t}]}},d.decorators=[{type:r.NgModule,args:[{imports:[o.CommonModule,i.FormsModule,n.HttpClientModule]}]}],d);function d(){}t.MockSlackNotificationService=a,t.SlackNotificationService=s,t.createNotificationFactory=l,t.SLACK_URL_TOKEN=p,t.SlackModule=f,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=romainmarecat-ngx-slack-notification.umd.min.js.map